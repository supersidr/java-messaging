version: '3.8'

services:
  postgres:
    image: postgres:15.5
    environment:
      POSTGRES_DB: creditapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  # credit-application-service:
  #   build: ./credit-application-service
  #   depends_on:
  #     - postgres
  #     - kafka
  #     - rabbitmq
  #   environment:
  #     SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/creditapp
  #     SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
  #     SPRING_RABBITMQ_HOST: rabbitmq

  # credit-processing-service:
  #   build: ./credit-processing-service
  #   depends_on:
  #     - kafka
  #     - rabbitmq
  #   environment:
  #     SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
  #     SPRING_RABBITMQ_HOST: rabbitmq

volumes:
  postgres_data:
